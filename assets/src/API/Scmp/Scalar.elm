-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module API.Scmp.Scalar exposing (Codecs, Id(..), NaiveDateTime(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Id
    = Id String


type NaiveDateTime
    = NaiveDateTime String


defineCodecs :
    { codecId : Codec valueId
    , codecNaiveDateTime : Codec valueNaiveDateTime
    }
    -> Codecs valueId valueNaiveDateTime
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueId valueNaiveDateTime
    ->
        { codecId : Codec valueId
        , codecNaiveDateTime : Codec valueNaiveDateTime
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder :
    (RawCodecs valueId valueNaiveDateTime -> Codec getterValue)
    -> Codecs valueId valueNaiveDateTime
    -> getterValue
    -> Graphql.Internal.Encode.Value
unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueId valueNaiveDateTime
    = Codecs (RawCodecs valueId valueNaiveDateTime)


type alias RawCodecs valueId valueNaiveDateTime =
    { codecId : Codec valueId
    , codecNaiveDateTime : Codec valueNaiveDateTime
    }


defaultCodecs : RawCodecs Id NaiveDateTime
defaultCodecs =
    { codecId =
        { encoder = \(Id raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Id
        }
    , codecNaiveDateTime =
        { encoder = \(NaiveDateTime raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map NaiveDateTime
        }
    }
